const { MigrationInterface, QueryRunner } = require('typeorm');

class CreateMessagingUsersTable1640000000023 {
    async up(queryRunner) {
        await queryRunner.query(`
            CREATE TABLE "messaging_users" (
                "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                "user_id" uuid NOT NULL,
                "name" varchar(255) NOT NULL,
                "email" varchar(255) NOT NULL,
                "is_online" boolean NOT NULL DEFAULT false,
                "last_seen" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                "status" varchar(50) NOT NULL DEFAULT 'available',
                "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                "updated_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
                "role" varchar(255) NOT NULL
            );
        `);

        // Add foreign key constraint with CASCADE DELETE
        await queryRunner.query(`
            ALTER TABLE "messaging_users" 
            ADD CONSTRAINT "fk_messaging_users_user_id" 
            FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
        `);

        // Create indexes
        await queryRunner.query(`CREATE INDEX "idx_messaging_users_user_id" ON "messaging_users" ("user_id");`);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_messaging_users_email" ON "messaging_users" ("email");`);
        await queryRunner.query(`CREATE INDEX "idx_messaging_users_is_online" ON "messaging_users" ("is_online");`);
        await queryRunner.query(`CREATE INDEX "idx_messaging_users_role" ON "messaging_users" ("role");`);
        await queryRunner.query(`CREATE INDEX "idx_messaging_users_status" ON "messaging_users" ("status");`);
        await queryRunner.query(`CREATE INDEX "idx_messaging_users_last_seen" ON "messaging_users" ("last_seen");`);
    }

    async down(queryRunner) {
        await queryRunner.query(`DROP TABLE "messaging_users";`);
    }
}

module.exports = CreateMessagingUsersTable1640000000023;
